apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// apply plugin: 'com.github.dcendents.android-maven'
group = "com.github.socure-inc"

buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['DeviceRisk_kotlinVersion']

  repositories {
    google()
    jcenter()
    maven {
      url "https://jitpack.io"
      credentials { username authToken }
    }
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.2.1'
    // classpath "com.moowork.gradle:gradle-node-plugin:1.3.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50"
  }
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['DeviceRisk_' + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['DeviceRisk_' + name]).toInteger()
}

android {
  compileSdkVersion 32
  buildToolsVersion "29.0.2"

  defaultConfig {
    minSdkVersion 22
    targetSdkVersion 32
    versionCode 10016
    versionName "1.0.0.16.pre-release"
    multiDexEnabled true
  }

  buildTypes {
    debug {
      buildConfigField "String", "B_URL", "\"https://dvnfo.com/\""
    }
    release {
      buildConfigField "String", "B_URL", "\"https://dvnfo.com/\""
      minifyEnabled false
    }
  }
  lintOptions {
    disable 'GradleCompatible'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  jcenter()
  google()

    def found = false
    def defaultDir = null
    def androidSourcesName = 'React Native sources'

    // if (rootProject.ext.has('reactNativeAndroidRoot')) {
    //   defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
    // } else {
    //   defaultDir = new File(
    //           projectDir,
    //           '/../../../node_modules/react-native/android'
    //   )
    // }

    // if (defaultDir.exists()) {
    //   maven {
    //     url defaultDir.toString()
    //     name androidSourcesName
    //   }

    //   logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    //   found = true
    // } else {


    //   //Checking if building for local or JitPack
      def isJitpack = projectDir.absolutePath.indexOf('jitpack') > -1
    //   def parentDir = isJitpack ? rootProject.projectDir : projectDir
    //   println "projectDir ${parentDir}"
    //   //If at some point the RN version is updated, update the react_modules with the
    //   // react-native folder inside of node_modules
    //   def androidSrcPath = ""
    //   def androidPreBuildPath = ""

      if(isJitpack) {
    //     androidSrcPath = "build/react_modules/react-native"
    //     androidPreBuildPath = "build/react_modules/react-native/android"
        println "Creating gradle.properties"
        def gProperties = new File(projectDir, 'gradle.properties')
        gProperties.append("android.useAndroidX=true\n")
        gProperties.append("android.enableJetifier=true\n")
        gProperties.append("kapt.incremental.apt=false\n")
      }
    //   } else {
    //     androidSrcPath = "node_modules/react-native"
    //     androidPreBuildPath = "node_modules/react-native/android"
    //   }

    //   1.upto(5, {
    //     if (found) return true
    //     println "droid ${parentDir.parentFile}"
    //     if(parentDir.parentFile) {
    //       parentDir = parentDir.parentFile

    //       def androidSourcesDir = new File(
    //             parentDir,
    //             androidSrcPath
    //       )

    //       def androidPrebuiltBinaryDir = new File(
    //               parentDir,
    //               androidPreBuildPath
    //       )

    //       if (androidPrebuiltBinaryDir.exists()) {
    //         maven {
    //           url androidPrebuiltBinaryDir.toString()
    //           name androidSourcesName
    //         }

    //         logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
    //         found = true
    //       } else if (androidSourcesDir.exists()) {
    //         maven {
    //           url androidSourcesDir.toString()
    //           name androidSourcesName
    //         }

    //         logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
    //         found = true
    //       }
    //     }
    //   })
    // }

    // if (!found) {
    //   throw new GradleException(
    //           "${project.name}: unable to locate React Native android sources. " +
    //                   "Ensure you have you installed React Native as a dependency in your project and try again."
    //   )
    // }
}

def kotlin_version = getExtOrDefault('kotlinVersion')

dependencies {
  // noinspection GradleDynamicVersion
  implementation fileTree(dir: "libs", include: ["*.jar"])
  // implementation files('libs/device-risk-sdk-debug.aar')
  api 'com.github.socure-inc:device-risk-android-sdk:2.0.1'
  api 'androidx.appcompat:appcompat:1.2.0'
  api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
  api "androidx.lifecycle:lifecycle-extensions:2.2.0"
  kapt "androidx.lifecycle:lifecycle-compiler:2.2.0"

  api 'com.google.android.gms:play-services-location:17.1.0'
  api 'androidx.ads:ads-identifier:1.0.0-alpha04'

  api 'com.karumi:dexter:6.2.1'
  api 'com.google.code.gson:gson:2.8.6'

    // Network
  api 'com.squareup.retrofit2:retrofit:2.6.2'
  api 'com.squareup.retrofit2:converter-gson:2.6.2'
  api 'com.squareup.okhttp3:logging-interceptor:4.2.2'
  api 'androidx.legacy:legacy-support-v4:1.0.0'

  api 'com.facebook.react:react-native:+'
  implementation 'com.facebook.infer.annotation:infer-annotation:0.11.2'
  implementation 'javax.inject:javax.inject:1'
  // implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
